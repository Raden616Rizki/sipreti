name: Deploy API Changes to GCP

on:
  push:
    paths:
      - "api/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.GCP_INSTANCE_IP }} >> ~/.ssh/known_hosts

      - name: Deploy CI3 folder
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_INSTANCE_IP }} "sudo rm -rf /tmp/deploy_ci3 && mkdir -p /tmp/deploy_ci3"
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" api/ci3/sipreti/ ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_INSTANCE_IP }}:/tmp/deploy_ci3/
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_INSTANCE_IP }} "sudo rm -rf /var/www/html/sipreti && sudo mv /tmp/deploy_ci3 /var/www/html/sipreti && sudo chown -R www-data:www-data /var/www/html/sipreti"

      - name: Deploy Django folder
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_INSTANCE_IP }} "sudo rm -rf /tmp/deploy_django && mkdir -p /tmp/deploy_django"
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" api/django/ ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_INSTANCE_IP }}:/tmp/deploy_django/
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_INSTANCE_IP }} "sudo rm -rf /var/www/html/django && sudo mv /tmp/deploy_django /var/www/html/django && sudo chown -R www-data:www-data /var/www/html/django"

      - name: Import MySQL database
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_INSTANCE_IP }} "
            mysql -u root -p'${{ secrets.MYSQL_ROOT_PASSWORD }}' -e '
              DROP DATABASE IF EXISTS sipreti_db;
              CREATE DATABASE sipreti_db;
              USE sipreti_db;
              SOURCE /var/www/html/sipreti/sipreti_db.sql;
            '
          "

      # - name: Run Composer Install
      #   run: |
      #     ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_INSTANCE_IP }} "
      #       cd /var/www/html/ci3
      #       /usr/local/bin/composer install --no-interaction --prefer-dist
      #     "